import spectral_cluster

#-----------------------------#
# Spectral clustering Samples #
#-----------------------------#

# INPUT: 

print("***Begin test 1 (k=3)***")

input_data = [[4.004978178687801, -2.601908322931573, -0.7796586613200545], [4.864334462672794, -2.492583845382608, 0.6217468339686765], [3.7734463965909546, 3.0756043214748767, -0.9415711020101369], [-1.9238454530189335, 5.237910440550934, 3.4692522373763817], [-3.9311373052371854, 4.403177957932997, 2.8746312311202793], [-2.6944212376916896, 3.2061210538531864, 3.0651296676250253], [5.529110864834428, -2.737208879737156, 0.6144719768745575], [-3.1515797799395746, 4.093624404351516, 3.0939241566219327], [-2.16403321008516, 4.731550534020183, 2.4769133704031416], [3.0439733516375003, -3.579234166891281, -0.24525310775385623], [-1.8461812576708985, 4.7441840445735926, 3.5748637583850553], [3.305530639020322, 2.1409576426980843, -2.197977641854963], [4.146277378924486, -3.765727710873221, -0.6161836712926008], [-1.7847363031574117, 3.7391228030969543, 4.623707848461306], [-2.9530286005302604, 5.229885644786761, 3.8312995538320376], [4.569657193338344, -3.6447441326321464, 0.2573452302955248], [1.109330271386658, 2.4972818667807006, -2.9673516331155216], [3.705943578564711, 3.42232363200658, -2.8123012742448674], [-3.458720828180583, 5.506212868644983, 2.809102795665514], [3.040143760046462, 2.842215322039344, -2.380792492609344], [-2.4918996527474393, 3.620453702725883, 2.31389731469609], [1.1577574552386976, 2.0091953058421366, -0.7774733331291146], [5.4594611403529125, -3.361385215645504, 0.053436065838339486], [4.596867784870414, -2.040970253267458, -0.4315153598921657], [4.089993333848459, -2.286548825002279, -0.6902232108742521], [1.5712041824192293, 3.12179648619343, -2.5981546032282763], [-3.65118896047347, 5.3478028642064395, 3.17046086939959], [4.330075577202794, -2.831682053510021, 0.6422235683723676], [3.412121278511384, 2.6618684855949706, -0.6618329821786828], [-2.6506265328869745, 4.496760394496776, 4.280365687790843], [-1.9808591089631022, 3.9941597410789194, 2.7164179662714507], [5.9324578892142865, -3.1745680530483407, -0.5940982637616423], [2.4442275141582828, 3.2734141968168915, -2.9063183422908363], [5.088237038024149, -3.5652070231326474, 0.7164531184648038], [2.0455644135495152, 2.1559006002219636, -1.7085307774441143], [2.218606258563473, 3.29078976429678, -2.4162117693044625], [4.557334972663284, -3.3557465013398238, -0.8654969447255463], [-1.5037327113660766, 5.970363763271742, 4.685037403335516], [4.85135061816802, -2.1522457118470717, -0.5686741864011766], [4.61134040463522, 2.0900546497804005, -1.2914907985724138]]

k=3

# OUTPUT:

output = spectral_cluster.spectral_clustering(input_data, k)

print("Expected output")
print([2, 2, 1, 0, 0, 0, 2, 0, 0, 2, 0, 1, 2, 0, 0, 2, 1, 1, 0, 1, 0, 1, 2, 2, 2, 1, 0, 2, 1, 0, 0, 2, 1, 2, 1, 1, 2, 0, 2, 1])

print("Actual output")
print(output)



# INPUT:

print("***Begin test 2 (k=3)***")

input_data = [[1.0, 61.6, -1.14], [1.0, 59.3, -1.68], [1.0, 61.7, -0.15], [1.0, 59.8, -1.89], [0.0, 61.5, 2.945], [0.0, 54.4, 0.11], [0.0, 62.2, 3.035], [1.0, 61.8, -0.075], [0.0, 63.6, 3.245], [1.0, 59.9, -2.055], [0.0, 55.1, -0.67], [1.0, 58.2, -2.595], [1.0, 62.0, -1.335], [1.0, 58.4, -2.535], [1.0, 64.4, 4.145], [0.0, 57.0, 0.43], [0.0, 63.9, 3.5], [0.0, 62.8, 4.685], [0.0, 55.9, -0.31], [1.0, 61.9, -2.16], [0.0, 53.6, 0.21], [1.0, 60.8, -2.22], [1.0, 61.3, -1.62], [1.0, 61.9, -1.215], [0.0, 64.4, 2.735], [0.0, 55.1, 0.423], [1.0, 63.0, 3.8], [0.0, 55.6, -0.571], [0.0, 60.6, 2.435], [0.0, 55.6, 0.41], [0.0, 54.4, -0.23], [0.0, 53.2, -0.7], [1.0, 60.8, -2.625], [0.0, 53.3, 0.74], [0.0, 56.3, -0.99], [0.0, 63.5, 2.855], [1.0, 60.5, 5.0], [1.0, 61.7, 2.345], [1.0, 58.3, -1.335], [0.0, 56.1, -0.14], [0.0, 64.0, 2.795], [0.0, 53.4, 0.25], [0.0, 61.2, 2.825], [1.0, 60.7, 3.425], [1.0, 58.6, -2.205], [1.0, 60.9, -1.41], [0.0, 54.3, 0.56], [1.0, 59.3, -1.395], [1.0, 59.7, -0.87], [0.0, 63.2, 4.025]]

k=3

# OUTPUT: 

output = spectral_cluster.spectral_clustering(input_data, k)

print("Expected output")
print([1, 1, 1, 1, 0, 2, 0, 1, 0, 1, 2, 1, 1, 1, 0, 2, 0, 0, 2, 1, 2, 1, 1, 1, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 2, 0, 0, 0, 1, 2, 0, 2, 0, 0, 1, 1, 2, 1, 1, 0])

print("Actual output")
print(output)




# INPUT:

print("***Begin test 3 (k=2)***")

input_data = [[-3.3, -2.4, 0.008, 0.041, -0.034], [-3.5, 3.5, 0.035, 0.053, -0.066], [-3.7, -2.6, 0.054, 0.078, -0.048], [-3.1, -3.4, 0.046, 0.054, 0.032], [-3.7, -2.7, 0.001, 0.093, 0.051], [-3.1, 3.3, 0.01, 0.003, -0.029], [-3.6, -3.1, 0.041, 0.09, 0.027], [-3.8, -2.5, 0.007, 0.059, -0.084], [-2.7, -2.2, 0.083, 0.083, 0.023], [-4.0, 2.8, 0.055, 0.068, 0.075], [-2.9, 3.1, 0.028, 0.08, -0.02], [-4.0, 3.1, 0.032, 0.055, 0.068], [-2.0, 3.7, 0.013, 0.054, -0.05], [-3.0, 2.3, 0.061, 0.085, -0.05], [-3.6, -2.2, 0.044, 0.009, 0.096], [-2.2, 3.4, 0.082, 0.097, 0.006], [-3.3, 3.3, 0.04, 0.027, -0.092], [-2.7, 3.5, 0.068, 0.074, -0.087], [-3.1, 3.6, 0.029, 0.062, -0.094], [-3.7, -2.8, 0.074, 0.057, -0.042], [-3.4, -2.1, 0.087, 0.013, 0.05], [-3.0, -2.3, 0.061, 0.066, -0.099], [-3.0, -3.8, 0.044, 0.047, -0.033], [-3.0, 2.1, 0.038, 0.037, 0.001], [-2.9, 2.8, 0.016, 0.065, 0.004], [-3.7, -3.9, 0.091, 0.011, 0.08], [-3.4, 2.2, 0.02, 0.013, 0.01], [-2.7, -2.9, 0.058, 0.085, -0.097], [-2.8, 3.4, 0.075, 0.077, 0.031], [-2.5, 3.5, 0.019, 0.017, 0.074], [-3.8, 3.0, 0.013, 0.066, 0.033], [-2.6, -3.3, 0.021, 0.04, 0.003], [-2.9, -3.0, 0.008, 0.012, 0.077], [-4.0, 2.0, 0.055, 0.069, 0.022], [-3.9, 2.3, 0.007, 0.043, 0.027], [-2.9, -2.4, 0.019, 0.026, 0.074], [-2.4, -2.4, 0.068, 0.008, 0.086], [-2.1, 3.9, 0.059, 0.0, -0.037], [-2.0, 3.0, 0.095, 0.07, -0.024], [-2.5, -3.4, 0.033, 0.06, 0.0], [-2.0, -2.7, 0.066, 0.077, -0.066], [-2.3, -3.7, 0.049, 0.061, 0.008], [-2.2, -3.4, 0.004, 0.025, 0.085], [-2.0, -3.7, 0.086, 0.065, -0.095], [-3.4, -2.3, 0.059, 0.066, -0.084], [-2.7, 3.5, 0.098, 0.006, -0.049], [-3.5, 2.3, 0.016, 0.08, -0.087], [-3.8, -3.4, 0.075, 0.07, 0.019], [-2.4, -3.0, 0.034, 0.061, -0.024], [-2.8, -3.2, 0.058, 0.055, 0.084]]

k=2


# OUTPUT:

output = spectral_cluster.spectral_clustering(input_data, k)

print("Expected output")
print([0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0])

print("Actual output")
print(output)

